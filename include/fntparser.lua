--------------------------------------------------------------------------------------
-- File name: Parser.lua
-- Description: Converts the .fnt file format to table
-- Notes: The .fnt file is generated by BMFont program (angelcode.com/products/bmfont)
--------------------------------------------------------------------------------------

-- unlike string.split(), this function doesn't give empty strings when there are multiple separators in a row
local split = function(str,sep)
	local fields = {}
	str:gsub(("([^%s]+)"):format(sep or ' '),function(c)
		table.insert(fields,c)
	end)
	return fields
end

-- File format documentation: http://angelcode.com/products/bmfont/doc/file_format.html
-- File format addendum: The CustomFont module also expects 'asset_url' in 'page' tags in order to load the bitmap font image
-- Example: page id=0 file="TestFont_0.png" asset_url="rbxassetid://1234567890"
return function(str)
	local Parsed = {char={},page={},kerning={}}
	str = str:gsub('\r','')
	local lines = split(str,'\n')
	for _,line in pairs(lines) do
		local t = split(line,' ')
		local tag = table.remove(t,1)
		local tagTable = {}
		local i = 1
		for i,s in pairs(t) do
			s = split(s,'=')
			local s2 = s[2]
			if s2:sub(1,1)=='"' then
				-- Keep adding strings in front until last one has a closing quote
				while s2:sub(#s2)~='"' do
					s2 = s2..' '..table.remove(t,i+1)
				end
				s2 = s2:sub(2,#s2-1) -- Remove quotes from start and end
			elseif s2:find(',') then
                s2 = split(s2, ',')
                for k,v in pairs(s2) do s2[k] = tonumber(v) end
			else
				s2 = tonumber(s2)
			end
			tagTable[s[1]] = s2
		end
		if tag=='char' or tag=='page' or tag=='kerning' then
			Parsed[tag][tonumber(tagTable[tag=='kerning' and 'second' or 'id'])] = tagTable
		else
			Parsed[tag] = tagTable
		end
	end
	return Parsed
end