name: Build Cosmic Cities

on:
  push:
    branches:
      - main

env:
  BUILD_TYPE: ${{ fromJSON('["dev", "release"]')[startsWith(github.ref, 'refs/tags/v')] }}
  CORE_LOVE_PACKAGE_PATH: ./cosmic_cities.love
  CORE_LOVE_ARTIFACT_NAME: core_love_package
  PRODUCT_NAME: CosmicCities
  BUNDLE_ID: com.omgrod.cosmic

jobs:
  build-core:
    runs-on: ubuntu-latest
    env:
      OUTPUT_FOLDER: ./build
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Build core .love package
        uses: love-actions/love-actions-core@v1
        with:
          build-list: ./conf.lua ./main.lua
          package-path: ${{ env.CORE_LOVE_PACKAGE_PATH }}
      - name: Upload .love package
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.CORE_LOVE_ARTIFACT_NAME }}
          path: ${{ env.CORE_LOVE_PACKAGE_PATH }}

  build-linux:
    runs-on: ubuntu-latest
    needs: build-core
    env:
      OUTPUT_FOLDER: ./build
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Download .love package
        uses: actions/download-artifact@v4
        with:
          name: ${{ env.CORE_LOVE_ARTIFACT_NAME }}
      - name: Download ColdClear for Linux
        uses: ./.github/actions/get-cc
        with:
          platform: Linux
          dir: ./ColdClear
      - name: Move ColdClear to lib path
        shell: bash
        run: |
          cd ./ColdClear
          mkdir -p ./lib/lua/5.1
          mv ./x64/CCloader.so ./lib/lua/5.1
      - name: Build Linux AppImage
        uses: love-actions/love-actions-linux@v2
        with:
          app-name: Cosmic Cities
          bundle-id: com.omgrod.cosmic
          description: A city-building game set in space
          version-string: "1.0.0"
          icon-path: .github/build/linux/${{ env.BUILD_TYPE }}/icon.png
          love-package: ${{ env.CORE_LOVE_PACKAGE_PATH }}
          lib-path: ./ColdClear/lib
          product-name: ${{ env.PRODUCT_NAME }}
          output-folder: ${{ env.OUTPUT_FOLDER }}
      - name: Upload Linux AppImage
        uses: actions/upload-artifact@v4
        with:
          name: CosmicCities_Linux_AppImage
          path: ${{ env.OUTPUT_FOLDER }}/${{ env.PRODUCT_NAME }}.AppImage

  build-windows:
    runs-on: windows-latest
    needs: build-core
    env:
      OUTPUT_FOLDER: ./build
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Download .love package
        uses: actions/download-artifact@v4
        with:
          name: ${{ env.CORE_LOVE_ARTIFACT_NAME }}
      - name: Download ColdClear for Windows
        uses: ./.github/actions/get-cc
        with:
          platform: Windows
          dir: ./ColdClear
      - name: Build Windows executables
        uses: love-actions/love-actions-windows@v1
        with:
          love-package: ${{ env.CORE_LOVE_PACKAGE_PATH }}
          icon-path: .github/build/windows/${{ env.BUILD_TYPE }}/icon.ico
          rc-path: .github/build/windows/${{ env.BUILD_TYPE }}/template.rc
          extra-assets-x86: ./ColdClear/x86/CCloader.dll ./ColdClear/x86/cold_clear.dll
          extra-assets-x64: ./ColdClear/x64/CCloader.dll ./ColdClear/x64/cold_clear.dll
          product-name: ${{ env.PRODUCT_NAME }}
          app-id: ${{ secrets.APP_ID }}
          project-website: https://omgrod.itch.io/cosmic
          output-folder: ${{ env.OUTPUT_FOLDER }}
      - name: Upload Windows x86
        uses: actions/upload-artifact@v4
        with:
          name: CosmicCities_Windows_x86
          path: ${{ env.OUTPUT_FOLDER }}/${{ env.PRODUCT_NAME }}_x86.zip
      - name: Upload Windows x64
        uses: actions/upload-artifact@v4
        with:
          name: CosmicCities_Windows_x64
          path: ${{ env.OUTPUT_FOLDER }}/${{ env.PRODUCT_NAME }}_x64.zip
      - name: Upload Windows Installer
        uses: actions/upload-artifact@v4
        with:
          name: CosmicCities_Windows_Installer
          path: ${{ env.OUTPUT_FOLDER }}/${{ env.PRODUCT_NAME }}_installer.exe
